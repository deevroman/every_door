name: APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache
        id: cache-primes
        uses: actions/cache@v3
        with:
          path: assets/presets.db
          key: presets

      - name: download & unzip
        if: steps.cache-primes.outputs.cache-hit != 'true'
        run: |
          wget -q https://taginfo.openstreetmap.org/download/taginfo-db.db.bz2
          bzip2 -d taginfo-db.db.bz2

      - name: generate presets.db
        if: steps.cache-primes.outputs.cache-hit != 'true'
        run: cd tools && ./update.sh ../taginfo-db.db && cd ..

      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '2.10.4'
      
      - env:
          KEY_JKS: ${{ secrets.KEY_JKS }}
        run: echo ${KEY_JKS} | base64 --decode -o android/key.jks
      
      - run: flutter config --no-analytics
      - env:
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          ALIAS_PASSWORD: ${{ secrets.ALIAS_PASSWORD }}
        run: flutter pub get
      - env:
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          ALIAS_PASSWORD: ${{ secrets.ALIAS_PASSWORD }}
        run: flutter build apk --release

      - uses: actions/upload-artifact@v2
        with:
          name: app-release.apk
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 1
  create_release:
    name: "Prelease"
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: app-release.apk
